trigger: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: RegionCode
    type: string 
    default: 'eu-west-1'
  - name: CFTStackName
    type: string
    default: 'CloudFrontS3DemoStack'

variables:
  - name: S3BucketNameVar
    value: 'var-initialised'

stages:
  - stage: ProvisionAWSInfrastructure
    displayName: "Deploy CFT Stack for S3/CloudFront to Maolte Sandbox"
    jobs:
    - job:
      steps:
      - task: CloudFormationCreateOrUpdateStack@1
        inputs:
          awsCredentials: 'cloudfrontDemoSandbox'
          regionName: ${{ parameters.RegionCode }}
          stackName: ${{ parameters.CFTStackName }}
          templateFile: 'iac/provision-infrastructure.yaml'
          templateParametersFile: 'iac/params.json'
          captureStackOutputs: asVariables
      - bash: echo "##vso[task.setvariable variable=cftS3BucketOutput;isOutput=true]$S3BucketName"
        name: declareCFTOutputs
      - bash: echo $(declareCFTOutputs.$(declareCFTOutputs.cftS3BucketOutput)
        name: echoCFTOutputs

  - stage: UploadFilesToS3
    dependsOn: ProvisionAWSInfrastructure
    variables:
      S3BucketNameVar: $[ dependences.ProvisionAWSInfrastructure.outputs['ProvisionAWSInfrastructure.declareCFTOutputs.cftS3BucketOutput'] ]
    displayName: "Deploy Static (S3) Site"
    jobs:
    - job:
      steps:
      - task: S3Upload@1
        displayName: "Upload static site files to newly created S3"
        inputs:
          awsCredentials: 'cloudfrontDemoSandbox'
          regionName: ${{ parameters.RegionCode }}
          bucketName: '$(S3BucketNameVar)'
          sourceFolder: '$(System.DefaultWorkingDirectory)/code'
          globExpressions: '**'
          filesAcl: 'bucket-owner-full-control'
        



